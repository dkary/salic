% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/license-history.R
\name{rank_sale}
\alias{rank_sale}
\title{Aggregate a Sale Table to ensure 1 row per customer per year.}
\usage{
rank_sale(sale, rank_var = "duration", grp_var = c("cust_id", "year"))
}
\arguments{
\item{sale}{data frame: Input sales data}

\item{rank_var}{character: name of variable(s) to use for ranking}

\item{grp_var}{character: name of variable(s) used for grouping}
}
\description{
This function takes an input sale table and returns a filtered version with
a single row per customer-year. The filter is based on one or more variables 
identified in rank_var; the row with the maximum value(s) is selected. 
The default (and intended purpose) is to pick the highest "duration" value 
per customer-year.
}
\examples{
library(dplyr)
data(lic, sale)
sale_unranked <- left_join(sale, lic)
sale_ranked <- rank_sale(sale_unranked) \%>\%
    join_first_month(sale_unranked)
    
# check sale ranking - highest duration will always be picked
left_join(
    count(sale_ranked, duration), 
    distinct(sale_unranked, cust_id, year, duration) \%>\% count(duration), 
    by = "duration",
    suffix = c(".ranked", ".unranked")
)
}
\seealso{
Other license history functions: \code{\link{check_history_samp}},
  \code{\link{check_identify_R3}},
  \code{\link{check_identify_lapse}},
  \code{\link{identify_R3}}, \code{\link{identify_lapse}},
  \code{\link{join_first_month}},
  \code{\link{make_lic_history}}
}
\concept{license history functions}
